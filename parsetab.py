
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

<<<<<<< HEAD
_lr_signature = 'NUMBER ID WHITESPACE ENTER EQ COL PLUS MINUS TIMES DIVIDE LPAREN RPAREN LBRACE RBRACE ARROW COMMA TRIPLEDOT TYPE TYPE FOR IN FUNC VAR TYPEstart : statements\n\t\t\t| emptyempty :statements : statement ENTER next_statementnext_statement : statement ENTER next_statement\n\t\t\t\t\t| emptystatement : assignment_statement\n\t\t\t\t| declaration_statement\n\t\t\t\t| function_defination\n\t\t\t\t| for_loop\n\t\t\t\t| function_callassignment_statement : ID WHITESPACE EQ WHITESPACE expressiondeclaration_statement : VAR WHITESPACE ID COL WHITESPACE TYPE\n\t\t\t\t\t\t\t| VAR WHITESPACE ID COL WHITESPACE TYPE WHITESPACE EQ WHITESPACE expression\n\t\t\t\t\t\t\t| VAR WHITESPACE ID WHITESPACE EQ WHITESPACE expression expression : expression PLUS term\n\t\t\t\t| expression MINUS term\n\t\t\t\t| term\n\t\t\t\tterm : term TIMES factor\n\t\t\t| term DIVIDE factor\n\t\t\t| factor\n\tfactor : ID\n\t\t\t| NUMBER\n\tfunction_defination : FUNC WHITESPACE ID LPAREN optional_parameters RPAREN WHITESPACE optional_return_type WHITESPACE LBRACE ENTER statements RBRACEoptional_parameters : has_parameter\n\t\t\t\t\t\t| emptyhas_parameter : has_parameter COMMA has_parameter\n\t\t\t\t\t\t| ID COL WHITESPACE TYPEoptional_return_type : ARROW WHITESPACE TYPEfor_loop : FOR WHITESPACE ID WHITESPACE IN WHITESPACE NUMBER TRIPLEDOT NUMBER WHITESPACE LBRACE ENTER statements RBRACEoptional_ids : empty\n\t\t| has_idhas_id : ID COMMA has_id\n\t\t| ID  function_call : ID LPAREN optional_ids RPAREN'
    
_lr_action_items = {'TIMES':([44,45,46,47,66,67,68,69,],[-22,-23,-21,58,58,58,-19,-20,]),'FUNC':([0,18,36,86,89,],[1,1,1,1,1,]),'ID':([0,14,16,17,18,19,31,32,33,36,55,56,57,58,59,61,81,86,89,],[2,20,22,26,2,30,40,44,22,2,40,44,44,44,44,44,44,2,2,]),'RBRACE':([18,28,29,36,50,88,91,],[-3,-4,-6,-3,-5,90,92,]),'NUMBER':([32,56,57,58,59,60,61,76,81,],[45,45,45,45,45,70,45,80,45,]),'FOR':([0,18,36,86,89,],[4,4,4,4,4,]),'LPAREN':([2,20,],[16,31,]),'DIVIDE':([44,45,46,47,66,67,68,69,],[-22,-23,-21,59,59,59,-19,-20,]),'$end':([0,3,5,12,18,28,29,36,50,],[-3,-1,0,-2,-3,-4,-6,-3,-5,]),'TRIPLEDOT':([70,],[76,]),'ARROW':([63,],[74,]),'LBRACE':([78,84,],[82,87,]),'MINUS':([43,44,45,46,47,66,67,68,69,71,85,],[56,-22,-23,-21,-18,-17,-16,-19,-20,56,56,]),'EQ':([15,37,72,],[21,51,77,]),'COMMA':([22,41,65,75,],[33,55,55,-28,]),'TYPE':([52,64,79,],[62,75,83,]),'WHITESPACE':([1,2,4,8,21,26,30,38,49,51,53,54,62,73,74,77,80,83,],[14,15,17,19,32,35,37,52,60,61,63,64,72,78,79,81,84,-29,]),'VAR':([0,18,36,86,89,],[8,8,8,8,8,]),'RPAREN':([16,22,23,24,25,31,39,41,42,48,65,75,],[-3,-34,34,-31,-32,-3,53,-25,-26,-33,-27,-28,]),'ENTER':([6,7,9,10,11,13,27,34,43,44,45,46,47,62,66,67,68,69,71,82,85,87,90,92,],[18,-10,-9,-7,-8,-11,36,-35,-12,-22,-23,-21,-18,-13,-17,-16,-19,-20,-15,86,-14,89,-24,-30,]),'COL':([30,40,],[38,54,]),'IN':([35,],[49,]),'PLUS':([43,44,45,46,47,66,67,68,69,71,85,],[57,-22,-23,-21,-18,-17,-16,-19,-20,57,57,]),}
=======
_lr_signature = 'NUMBER ID WHITESPACE ENTER EQ COL PLUS MINUS TIMES DIVIDE LPAREN RPAREN LBRACE RBRACE ARROW COMMA TRIPLEDOT TYPE TYPE FUNC IN TYPE FOR VARstart : statements\n\t\t\t| emptyempty :statements : statement ENTER next_statementnext_statement : statement ENTER next_statement\n\t\t\t\t\t| emptystatement : assignment_statement\n\t\t\t\t| declaration_statement\n\t\t\t\t| function_defination\n\t\t\t\t| for_loop\n\t\t\t\t| function_callassignment_statement : ID WHITESPACE EQ WHITESPACE expressiondeclaration_statement : VAR WHITESPACE ID COL WHITESPACE TYPE\n\t\t\t\t\t\t\t| VAR WHITESPACE ID COL WHITESPACE TYPE WHITESPACE EQ WHITESPACE expression\n\t\t\t\t\t\t\t| VAR WHITESPACE ID WHITESPACE EQ WHITESPACE expression expression : expression PLUS term\n\t\t\t\t| expression MINUS term\n\t\t\t\t| term\n\t\t\t\tterm : term TIMES factor\n\t\t\t| term DIVIDE factor\n\t\t\t| factor\n\tfactor : ID\n\t\t\t| NUMBER\n\tfunction_defination : FUNC WHITESPACE ID LPAREN optional_parameters RPAREN WHITESPACE optional_return_type WHITESPACE LBRACE ENTER statements RBRACEoptional_parameters : has_parameter\n\t\t\t\t\t\t| emptyhas_parameter : has_parameter COMMA has_parameter\n\t\t\t\t\t\t| ID COL WHITESPACE TYPEoptional_return_type : ARROW WHITESPACE TYPEfor_loop : FOR WHITESPACE ID WHITESPACE IN WHITESPACE NUMBER TRIPLEDOT NUMBER WHITESPACE LBRACE ENTER statements RBRACEoptional_ids : empty\n\t\t| has_idhas_id : ID COMMA has_id\n\t\t| ID  function_call : ID LPAREN optional_ids RPAREN'
    
_lr_action_items = {'IN':([38,],[52,]),'PLUS':([45,46,47,48,49,67,68,69,70,71,84,],[-22,59,-21,-23,-18,59,-17,-16,-19,-20,59,]),'FUNC':([0,18,37,86,89,],[2,2,2,2,2,]),'LPAREN':([6,20,],[17,31,]),'COMMA':([25,42,65,73,],[36,55,55,-28,]),'RBRACE':([18,27,29,37,51,88,91,],[-3,-4,-6,-3,-5,90,92,]),'VAR':([0,18,37,86,89,],[5,5,5,5,5,]),'ID':([0,14,15,17,18,19,31,34,36,37,55,57,58,59,60,61,80,86,89,],[6,20,21,25,6,30,40,45,25,6,40,45,45,45,45,45,45,6,6,]),'TRIPLEDOT':([72,],[77,]),'WHITESPACE':([2,5,6,13,21,22,30,32,44,52,53,54,56,74,75,76,81,82,],[14,15,16,19,33,34,38,43,57,62,63,64,66,78,79,80,85,-29,]),'RPAREN':([17,23,24,25,26,31,39,41,42,50,65,73,],[-3,35,-32,-34,-31,-3,-26,54,-25,-33,-27,-28,]),'DIVIDE':([45,47,48,49,68,69,70,71,],[-22,-21,-23,61,61,61,-19,-20,]),'FOR':([0,18,37,86,89,],[13,13,13,13,13,]),'$end':([0,9,10,11,18,27,29,37,51,],[-3,-2,0,-1,-3,-4,-6,-3,-5,]),'ARROW':([64,],[74,]),'LBRACE':([79,85,],[83,87,]),'TYPE':([43,63,78,],[56,73,82,]),'EQ':([16,33,66,],[22,44,76,]),'COL':([21,40,],[32,53,]),'ENTER':([1,3,4,7,8,12,28,35,45,46,47,48,49,56,67,68,69,70,71,83,84,87,90,92,],[-8,-7,-9,18,-11,-10,37,-35,-22,-12,-21,-23,-18,-13,-15,-17,-16,-19,-20,86,-14,89,-24,-30,]),'MINUS':([45,46,47,48,49,67,68,69,70,71,84,],[-22,58,-21,-23,-18,58,-17,-16,-19,-20,58,]),'NUMBER':([34,57,58,59,60,61,62,77,80,],[48,48,48,48,48,48,72,81,48,]),'TIMES':([45,47,48,49,68,69,70,71,],[-22,-21,-23,60,60,60,-19,-20,]),}
>>>>>>> 9f85ee0ae7e077f7e07a61f899cec8c1d94de5a3

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

<<<<<<< HEAD
_lr_goto_items = {'optional_parameters':([31,],[39,]),'optional_ids':([16,],[23,]),'statements':([0,86,89,],[3,88,91,]),'has_parameter':([31,55,],[41,65,]),'optional_return_type':([63,],[73,]),'factor':([32,56,57,58,59,61,81,],[46,46,46,68,69,46,46,]),'expression':([32,61,81,],[43,71,85,]),'start':([0,],[5,]),'statement':([0,18,36,86,89,],[6,27,27,6,6,]),'function_call':([0,18,36,86,89,],[13,13,13,13,13,]),'assignment_statement':([0,18,36,86,89,],[10,10,10,10,10,]),'next_statement':([18,36,],[28,50,]),'declaration_statement':([0,18,36,86,89,],[11,11,11,11,11,]),'has_id':([16,33,],[25,48,]),'empty':([0,16,18,31,36,],[12,24,29,42,29,]),'for_loop':([0,18,36,86,89,],[7,7,7,7,7,]),'function_defination':([0,18,36,86,89,],[9,9,9,9,9,]),'term':([32,56,57,61,81,],[47,66,67,47,47,]),}
=======
_lr_goto_items = {'optional_ids':([17,],[23,]),'has_id':([17,36,],[24,50,]),'declaration_statement':([0,18,37,86,89,],[1,1,1,1,1,]),'start':([0,],[10,]),'for_loop':([0,18,37,86,89,],[12,12,12,12,12,]),'optional_return_type':([64,],[75,]),'statements':([0,86,89,],[11,88,91,]),'term':([34,57,58,59,80,],[49,49,68,69,49,]),'optional_parameters':([31,],[41,]),'assignment_statement':([0,18,37,86,89,],[3,3,3,3,3,]),'function_defination':([0,18,37,86,89,],[4,4,4,4,4,]),'expression':([34,57,80,],[46,67,84,]),'next_statement':([18,37,],[27,51,]),'factor':([34,57,58,59,60,61,80,],[47,47,47,47,70,71,47,]),'statement':([0,18,37,86,89,],[7,28,28,7,7,]),'empty':([0,17,18,31,37,],[9,26,29,39,29,]),'has_parameter':([31,55,],[42,65,]),'function_call':([0,18,37,86,89,],[8,8,8,8,8,]),}
>>>>>>> 9f85ee0ae7e077f7e07a61f899cec8c1d94de5a3

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','swift_parser.py',21),
  ('start -> empty','start',1,'p_start','swift_parser.py',22),
  ('empty -> <empty>','empty',0,'p_empty','swift_parser.py',27),
  ('statements -> statement ENTER next_statement','statements',3,'p_statements','swift_parser.py',31),
  ('next_statement -> statement ENTER next_statement','next_statement',3,'p_next_statement','swift_parser.py',35),
  ('next_statement -> empty','next_statement',1,'p_next_statement','swift_parser.py',36),
  ('statement -> assignment_statement','statement',1,'p_statement','swift_parser.py',44),
  ('statement -> declaration_statement','statement',1,'p_statement','swift_parser.py',45),
  ('statement -> function_defination','statement',1,'p_statement','swift_parser.py',46),
  ('statement -> for_loop','statement',1,'p_statement','swift_parser.py',47),
  ('statement -> function_call','statement',1,'p_statement','swift_parser.py',48),
  ('assignment_statement -> ID WHITESPACE EQ WHITESPACE expression','assignment_statement',5,'p_assignment_statement','swift_parser.py',52),
  ('declaration_statement -> VAR WHITESPACE ID COL WHITESPACE TYPE','declaration_statement',6,'p_declaration_statement','swift_parser.py',64),
  ('declaration_statement -> VAR WHITESPACE ID COL WHITESPACE TYPE WHITESPACE EQ WHITESPACE expression','declaration_statement',10,'p_declaration_statement','swift_parser.py',65),
  ('declaration_statement -> VAR WHITESPACE ID WHITESPACE EQ WHITESPACE expression','declaration_statement',7,'p_declaration_statement','swift_parser.py',66),
  ('expression -> expression PLUS term','expression',3,'p_expression','swift_parser.py',98),
  ('expression -> expression MINUS term','expression',3,'p_expression','swift_parser.py',99),
  ('expression -> term','expression',1,'p_expression','swift_parser.py',100),
  ('term -> term TIMES factor','term',3,'p_term','swift_parser.py',112),
  ('term -> term DIVIDE factor','term',3,'p_term','swift_parser.py',113),
  ('term -> factor','term',1,'p_term','swift_parser.py',114),
  ('factor -> ID','factor',1,'p_factor','swift_parser.py',126),
  ('factor -> NUMBER','factor',1,'p_factor','swift_parser.py',127),
  ('function_defination -> FUNC WHITESPACE ID LPAREN optional_parameters RPAREN WHITESPACE optional_return_type WHITESPACE LBRACE ENTER statements RBRACE','function_defination',13,'p_function_defination','swift_parser.py',132),
  ('optional_parameters -> has_parameter','optional_parameters',1,'p_optional_parameters','swift_parser.py',139),
  ('optional_parameters -> empty','optional_parameters',1,'p_optional_parameters','swift_parser.py',140),
  ('has_parameter -> has_parameter COMMA has_parameter','has_parameter',3,'p_has_parameter','swift_parser.py',143),
  ('has_parameter -> ID COL WHITESPACE TYPE','has_parameter',4,'p_has_parameter','swift_parser.py',144),
  ('optional_return_type -> ARROW WHITESPACE TYPE','optional_return_type',3,'p_optional_return_type','swift_parser.py',147),
  ('for_loop -> FOR WHITESPACE ID WHITESPACE IN WHITESPACE NUMBER TRIPLEDOT NUMBER WHITESPACE LBRACE ENTER statements RBRACE','for_loop',14,'p_for_loop','swift_parser.py',150),
  ('optional_ids -> empty','optional_ids',1,'p_optional_ids','swift_parser.py',157),
  ('optional_ids -> has_id','optional_ids',1,'p_optional_ids','swift_parser.py',158),
  ('has_id -> ID COMMA has_id','has_id',3,'p_has_id','swift_parser.py',162),
  ('has_id -> ID','has_id',1,'p_has_id','swift_parser.py',163),
  ('function_call -> ID LPAREN optional_ids RPAREN','function_call',4,'p_function_call','swift_parser.py',171),
]
